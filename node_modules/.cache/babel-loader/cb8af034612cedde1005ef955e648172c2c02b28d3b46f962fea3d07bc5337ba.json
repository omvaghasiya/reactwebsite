{"ast":null,"code":"/*!\n  * Bootstrap base-component.js v5.2.3 (https://getbootstrap.com/)\n  * Copyright 2011-2022 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)\n  * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n  */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('./dom/data'), require('./util/index'), require('./dom/event-handler'), require('./util/config')) : typeof define === 'function' && define.amd ? define(['./dom/data', './util/index', './dom/event-handler', './util/config'], factory) : (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.BaseComponent = factory(global.Data, global.Index, global.EventHandler, global.Config));\n})(this, function (Data, index, EventHandler, Config) {\n  'use strict';\n\n  const _interopDefaultLegacy = e => e && typeof e === 'object' && 'default' in e ? e : {\n    default: e\n  };\n  const Data__default = /*#__PURE__*/_interopDefaultLegacy(Data);\n  const EventHandler__default = /*#__PURE__*/_interopDefaultLegacy(EventHandler);\n  const Config__default = /*#__PURE__*/_interopDefaultLegacy(Config);\n\n  /**\n   * --------------------------------------------------------------------------\n   * Bootstrap (v5.2.3): base-component.js\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n   * --------------------------------------------------------------------------\n   */\n  /**\n   * Constants\n   */\n\n  const VERSION = '5.2.3';\n  /**\n   * Class definition\n   */\n\n  class BaseComponent extends Config__default.default {\n    constructor(element, config) {\n      super();\n      element = index.getElement(element);\n      if (!element) {\n        return;\n      }\n      this._element = element;\n      this._config = this._getConfig(config);\n      Data__default.default.set(this._element, this.constructor.DATA_KEY, this);\n    } // Public\n\n    dispose() {\n      Data__default.default.remove(this._element, this.constructor.DATA_KEY);\n      EventHandler__default.default.off(this._element, this.constructor.EVENT_KEY);\n      for (const propertyName of Object.getOwnPropertyNames(this)) {\n        this[propertyName] = null;\n      }\n    }\n    _queueCallback(callback, element) {\n      let isAnimated = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      index.executeAfterTransition(callback, element, isAnimated);\n    }\n    _getConfig(config) {\n      config = this._mergeConfigObj(config, this._element);\n      config = this._configAfterMerge(config);\n      this._typeCheckConfig(config);\n      return config;\n    } // Static\n\n    static getInstance(element) {\n      return Data__default.default.get(index.getElement(element), this.DATA_KEY);\n    }\n    static getOrCreateInstance(element) {\n      let config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return this.getInstance(element) || new this(element, typeof config === 'object' ? config : null);\n    }\n    static get VERSION() {\n      return VERSION;\n    }\n    static get DATA_KEY() {\n      return `bs.${this.NAME}`;\n    }\n    static get EVENT_KEY() {\n      return `.${this.DATA_KEY}`;\n    }\n    static eventName(name) {\n      return `${name}${this.EVENT_KEY}`;\n    }\n  }\n  return BaseComponent;\n});","map":{"version":3,"names":["VERSION","BaseComponent","Config__default","default","constructor","element","config","index","getElement","_element","_config","_getConfig","Data__default","set","DATA_KEY","dispose","remove","EventHandler__default","off","EVENT_KEY","propertyName","Object","getOwnPropertyNames","_queueCallback","callback","isAnimated","arguments","length","undefined","executeAfterTransition","_mergeConfigObj","_configAfterMerge","_typeCheckConfig","getInstance","get","getOrCreateInstance","NAME","eventName","name"],"sources":["D:\\React_practise\\service\\node_modules\\bootstrap\\js\\src\\base-component.js"],"sourcesContent":["/**\n * --------------------------------------------------------------------------\n * Bootstrap (v5.2.3): base-component.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport Data from './dom/data'\nimport { executeAfterTransition, getElement } from './util/index'\nimport EventHandler from './dom/event-handler'\nimport Config from './util/config'\n\n/**\n * Constants\n */\n\nconst VERSION = '5.2.3'\n\n/**\n * Class definition\n */\n\nclass BaseComponent extends Config {\n  constructor(element, config) {\n    super()\n\n    element = getElement(element)\n    if (!element) {\n      return\n    }\n\n    this._element = element\n    this._config = this._getConfig(config)\n\n    Data.set(this._element, this.constructor.DATA_KEY, this)\n  }\n\n  // Public\n  dispose() {\n    Data.remove(this._element, this.constructor.DATA_KEY)\n    EventHandler.off(this._element, this.constructor.EVENT_KEY)\n\n    for (const propertyName of Object.getOwnPropertyNames(this)) {\n      this[propertyName] = null\n    }\n  }\n\n  _queueCallback(callback, element, isAnimated = true) {\n    executeAfterTransition(callback, element, isAnimated)\n  }\n\n  _getConfig(config) {\n    config = this._mergeConfigObj(config, this._element)\n    config = this._configAfterMerge(config)\n    this._typeCheckConfig(config)\n    return config\n  }\n\n  // Static\n  static getInstance(element) {\n    return Data.get(getElement(element), this.DATA_KEY)\n  }\n\n  static getOrCreateInstance(element, config = {}) {\n    return this.getInstance(element) || new this(element, typeof config === 'object' ? config : null)\n  }\n\n  static get VERSION() {\n    return VERSION\n  }\n\n  static get DATA_KEY() {\n    return `bs.${this.NAME}`\n  }\n\n  static get EVENT_KEY() {\n    return `.${this.DATA_KEY}`\n  }\n\n  static eventName(name) {\n    return `${name}${this.EVENT_KEY}`\n  }\n}\n\nexport default BaseComponent\n"],"mappings":";;;;;;;;;;;;;;;;;EAAA;;;;;;EAYA;;;;EAIA,MAAMA,OAAO,GAAG,OAAhB;EAEA;;;;EAIA,MAAMC,aAAN,SAA4BC,eAAA,CAAAC,OAA5B,CAAmC;IACjCC,WAAWA,CAACC,OAAD,EAAUC,MAAV,EAAkB;MAC3B;MAEAD,OAAO,GAAGE,KAAA,CAAAC,UAAU,CAACH,OAAD,CAApB;MACA,IAAI,CAACA,OAAL,EAAc;QACZ;MACD;MAED,IAAK,CAAAI,QAAL,GAAgBJ,OAAhB;MACA,KAAKK,OAAL,GAAe,KAAKC,UAAL,CAAgBL,MAAhB,CAAf;MAEAM,aAAA,CAAAT,OAAI,CAACU,GAAL,CAAS,IAAK,CAAAJ,QAAd,EAAwB,KAAKL,WAAL,CAAiBU,QAAzC,EAAmD,IAAnD;IACD,CAbgC;;IAgBjCC,OAAOA,CAAA,EAAG;MACRH,aAAA,CAAAT,OAAI,CAACa,MAAL,CAAY,KAAKP,QAAjB,EAA2B,KAAKL,WAAL,CAAiBU,QAA5C;MACAG,qBAAA,CAAAd,OAAY,CAACe,GAAb,CAAiB,KAAKT,QAAtB,EAAgC,KAAKL,WAAL,CAAiBe,SAAjD;MAEA,KAAK,MAAMC,YAAX,IAA2BC,MAAM,CAACC,mBAAP,CAA2B,IAA3B,CAA3B,EAA6D;QAC3D,IAAK,CAAAF,YAAL,IAAqB,IAArB;MACD;IACF;IAEDG,cAAcA,CAACC,QAAD,EAAWnB,OAAX,EAAuC;MAAA,IAAnBoB,UAAU,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,IAAjC;MACZnB,KAAA,CAAAsB,sBAAsB,CAACL,QAAD,EAAWnB,OAAX,EAAoBoB,UAApB,CAAtB;IACD;IAEDd,UAAUA,CAACL,MAAD,EAAS;MACjBA,MAAM,GAAG,KAAKwB,eAAL,CAAqBxB,MAArB,EAA6B,KAAKG,QAAlC,CAAT;MACAH,MAAM,GAAG,KAAKyB,iBAAL,CAAuBzB,MAAvB,CAAT;MACA,IAAK,CAAA0B,gBAAL,CAAsB1B,MAAtB;MACA,OAAOA,MAAP;IACD,CAlCgC;;IAqCf,OAAX2B,WAAWA,CAAC5B,OAAD,EAAU;MAC1B,OAAOO,aAAA,CAAAT,OAAI,CAAC+B,GAAL,CAAS3B,KAAA,CAAAC,UAAU,CAACH,OAAD,CAAnB,EAA8B,IAAK,CAAAS,QAAnC,CAAP;IACD;IAEyB,OAAnBqB,mBAAmBA,CAAC9B,OAAD,EAAuB;MAAA,IAAbC,MAAM,GAAAoB,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,EAAnB;MACxB,OAAO,KAAKO,WAAL,CAAiB5B,OAAjB,CAA6B,QAAI,IAAJ,CAASA,OAAT,EAAkB,OAAOC,MAAP,KAAkB,QAAlB,GAA6BA,MAA7B,GAAsC,IAAxD,CAApC;IACD;IAEiB,WAAPN,OAAOA,CAAA,EAAG;MACnB,OAAOA,OAAP;IACD;IAEkB,WAARc,QAAQA,CAAA,EAAG;MACpB,OAAQ,MAAK,IAAK,CAAAsB,IAAlB;IACD;IAEmB,WAATjB,SAASA,CAAA,EAAG;MACrB,OAAQ,IAAG,IAAK,CAAAL,QAAhB;IACD;IAEe,OAATuB,SAASA,CAACC,IAAD,EAAO;MACrB,OAAU,GAAAA,IAAO,QAAKnB,SAAtB;IACD;EA3DgC"},"metadata":{},"sourceType":"script","externalDependencies":[]}